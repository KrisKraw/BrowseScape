<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>
<!-- Make sure you put this AFTER Leaflet's CSS -->
<style>
body {
    padding: 0;
    margin: 0;
}
html, body, #map {
    height: 100%;
    width: 100vw;
}
</style>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
</head>
<body>
<div id="map" style="width: 600px; height: 400px;"></div>
<script>

	var theMarker = {};
	var map = L.map('map').fitWorld();
	map.locate({setView: true, watch: true});
	const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
			maxZoom: 17,
			attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
	}).addTo(map);

	function onMapClick(e) {
		if(typeof AndroidInterface !== 'undefined') {
			AndroidInterface.updateLatLon(e.latlng);
		}
		if (theMarker != undefined) {
			map.removeLayer(theMarker);
    	}
		theMarker = L.marker(e.latlng).addTo(map);
	}

	map.on('click', onMapClick);

	function onLocationError(e) {
	    alert(e.message);
	}

map.on('locationerror', onLocationError);


const options = {
	enableHighAccuracy: true, // Request high accuracy if available
    timeout: 5000,           // Maximum time in milliseconds to wait for a position
    maximumAge: 0            // Maximum age in milliseconds of a possible cached position
    };

function successCallback(position) {
	const latitude = position.coords.latitude;
    const longitude = position.coords.longitude;
    const accuracy = position.coords.accuracy; // Accuracy in meters

    map.setView(new L.LatLng(latitude, longitude), 15);

    theMarker = L.marker(new L.LatLng(latitude, longitude)).addTo(map);

    //alert(`Latitude: ${latitude}`);
    console.log(`Longitude: ${longitude}`);
    console.log(`Accuracy: ${accuracy} meters`);
}

function errorCallback(error) {
	switch(error.code) {
            case error.PERMISSION_DENIED:
                console.error("User denied the request for Geolocation.");
                break;
            case error.POSITION_UNAVAILABLE:
                console.error("Location information is unavailable.");
                break;
            case error.TIMEOUT:
                console.error("The request to get user location timed out.");
                break;
            case error.UNKNOWN_ERROR:
                console.error("An unknown error occurred.");
                break;
	}
}

navigator.geolocation.getCurrentPosition(successCallback, errorCallback, options);

</script>
</body>
</html>